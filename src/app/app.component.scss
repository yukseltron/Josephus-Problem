$amount: 10em;

:root {
	--itemSize: 0;
}


.circle {
  width: 100px;
  height: 100px;
  background: red;
  border-radius: 50%;
  text-align: center;
  line-height: 600%;
  color: black;
}

@mixin on-circle($item-count, $item-size, $circle-size) {
  position: relative;
  width:  $circle-size;
  height: $circle-size;
  padding: 0;
  border-radius: 100%;
  list-style: none;

  > * {
    display: block;
    position: absolute;
    top:  50%;
    left: 50%;
    width:  $item-size;
    height: $item-size;
    margin: -($item-size / 2);

    $angle: (360 / $item-count);
    $rot: 0;

    @for $i from 1 through $item-count {
      &:nth-of-type(#{$i}) {
        transform:
          rotate($rot * 1deg)
          translate($circle-size / 2)
          rotate($rot * -1deg);
      }

      $rot: $rot + $angle;
    }
  }
}

.circle-container {
  @include on-circle($item-count: 8, $item-size: 6em, $circle-size: $amount);
  margin: 5em auto 0;
  border: solid 5px tomato;

  .circle {
    display: block;
    max-width: 100%;
    border-radius: 50%;
    transition: .15s;

    &:hover,
    &:active {
      filter: grayscale(0);
    }
  }
}
